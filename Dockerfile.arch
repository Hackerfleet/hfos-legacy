# Docker Image for hfos - Arch Linux version
#
# This image essentially packages up HFOS
# into a Docker Image/Container running Archi Linux OS.
#
# Usage Examples(s)::
#
#     $ docker run -i -t hackerfleet/hfos hfos_launcher.py
#     $ docker run -i -t -p 127.0.0.1:80:80 --name hfos-test-live -t hackerfleet/hfos
#
# VERSION: 1.1.0
#
# Last Updated: 20160723

FROM base/archlinux
MAINTAINER Heiko 'riot' Weinen <riot@hackerfleet.org>

# Install dependencies

RUN pacman -Sy --noconfirm && \
    pacman -Ss arch-keyring

RUN pacman-db-upgrade

RUN pacman -S --noconfirm --force git \
        npm \
        enchant \
        mongodb \
        python-pymongo \
        python-urwid \
        python-pyserial

RUN pacman -Sc --noconfirm

# Get HFOS

RUN git clone https://github.com/Hackerfleet/hfos
WORKDIR hfos

# Install HFOS

RUN pip install -r requirements-dev.txt
RUN pip install .

# Install all modules

WORKDIR modules
RUN python install.py --all
WORKDIR ..

# Make sure /var/[cache,lib]/hfos etc exists

RUN python setup.py install_var

# Generate & Install Documentation

RUN python setup.py build_sphinx
RUN python setup.py install_docs

# Install Frontend

RUN git submodule init && git submodule update

# Upgrade npm (from ancient Debian version to current)

RUN npm install npm -g

#WORKDIR frontend
#RUN npm install
#WORKDIR ..

# Mongo config (smallfiles), database startup and provisioning

RUN echo smallfiles = true >> /etc/mongodb.conf

# The next one was necessary on one installation, but that could've been due to a weird mongodb release
#RUN echo setParameter = textSearchEnabled = true >> /etc/mongodb.conf

RUN /etc/init.d/mongodb start && python setup.py install_provisions

# Add user account and group

RUN useradd -Ums /bin/sh hfos

#  Services

EXPOSE 80

# If you want to run the frontend development live server, uncomment this:
# EXPOSE 8081

